---
import { getShowsByCategory } from "../../utils/categoryUtils";

import CategorieTitle from "./CategoryTitle.astro";
import ShowListing from "../ShowCard/ShowListing.astro";
import MoviesListing from "../ShowCard/MoviesListing.astro";

import type { CategoryType } from "../../types/Category";

interface Props {
  category: CategoryType;
}

const { category } = Astro.props;

const shows = getShowsByCategory(category.slug);

const hasChildren =
  category.childrens !== undefined && category.childrens.length > 0;

// Check for showType parameter
const showType = category.showType || "default"; // Default to "default" if no showType is provided
---

<div class="l-container">
  <div class="c-category" id={category.slug}>
    <CategorieTitle category={category} />

    {/* Render MoviesListing if showType is "movie", otherwise ShowListing */}
    {showType === "movie" ? (
      <MoviesListing shows={shows} />
    ) : hasChildren ? (
      <>
        {category.childrens?.map((child) => (
          <div class="c-category c-category__child">
            <CategorieTitle category={child} child={true} />

            {/* Check the child's showType */}
            {child.showType === "movie" ? (
              <MoviesListing shows={getShowsByCategory(child.slug)} />
            ) : (
              <ShowListing shows={getShowsByCategory(child.slug)} />
            )}
          </div>
        ))}
      </>
    ) : (
      <ShowListing shows={shows} />
    )}
  </div>
</div>

<style lang="scss">
  .c-category {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 50px;

    width: 100%;

    margin-top: 120px;

    scroll-margin: 10vh;
  }
</style>